{"version":3,"sources":["logo-white.png","logo-black.png","components/Navbar.tsx","models/todo.ts","context/todo-context.tsx","components/TodoList.tsx","components/AddTodo.tsx","components/charts/AreaChartComponent.tsx","components/charts/RadalChartComponent.tsx","components/charts/BarChartComponent.tsx","components/charts/LineChartComponent.tsx","components/charts/Charts.tsx","components/graph/GraphComponent.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","useColorMode","colorMode","toggleColorMode","width","maxW","mb","m","src","logoBlack","logoWhite","alt","boxSize","objectFit","size","fontSize","bgGradient","bgClip","aria-label","icon","isRound","onClick","Todo","todoText","id","text","this","Date","toISOString","TodosContext","React","createContext","items","addTodo","removeTodo","TodosContextProvider","props","useState","todos","setTodos","contextValue","newTodo","prevTodos","concat","todoId","filter","todo","Provider","value","children","TodoList","todoCtx","useContext","removeHandler","length","colorScheme","px","py","borderRadius","margin","divider","borderColor","borderWidth","p","base","sm","lg","map","bind","cursor","AddTodo","todoTextInputRef","useRef","toast","useToast","onSubmit","event","preventDefault","enteredText","current","trim","title","status","duration","isClosable","mt","variant","placeholder","ref","backgroundColor","color","type","AreaChartComponent","ResponsiveContainer","aspect","AreaChart","height","data","name","uv","pv","amt","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","stroke","fill","RadalChartComponent","RadarChart","cx","cy","outerRadius","subject","A","B","fullMark","PolarGrid","PolarAngleAxis","Radar","fillOpacity","BarChartComponent","BarChart","Legend","Bar","stackId","LineChartComponent","LineChart","Line","activeDot","r","Charts","textAlign","GraphComponent","useEffect","graph","G6","Graph","container","ReactDOM","findDOMNode","layout","defaultNode","refreshDragedNodePosition","e","model","item","get","fx","x","fy","y","console","log","fetch","then","res","json","nodes","edges","edge","i","Object","assign","render","on","layoutMethods","execute","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.870fdfba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-white.08fa8446.png\";","export default __webpack_public_path__ + \"static/media/logo-black.34082374.png\";","import React from 'react';\nimport {\n  Container,\n  Heading,\n  HStack,\n  IconButton,\n  Image,\n  Spacer,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { FaSun, FaMoon } from 'react-icons/fa';\n\nimport logoWhite from '../logo-white.png';\nimport logoBlack from '../logo-black.png';\n\nfunction Navbar() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Container width='100%' maxW='100%' mb='4'>\n      <HStack m='2'>\n        <Image\n          src={colorMode === 'light' ? logoBlack : logoWhite}\n          alt='Logo'\n          boxSize='60px'\n          objectFit='contain'\n        />\n        <Spacer />\n        <Heading\n          size='lg'\n          fontSize='36px'\n          bgGradient='Linear(to-r, green.300, green.400, green.500)'\n          bgClip='text'\n        >\n          Todo List\n        </Heading>\n        <Spacer />\n        <IconButton\n          aria-label='Toogle Theme'\n          icon={colorMode === 'light' ? <FaSun /> : <FaMoon />}\n          isRound={true}\n          onClick={toggleColorMode}\n        />\n      </HStack>\n    </Container>\n  );\n}\n\nexport default Navbar;\n","class Todo {\n  id: string;\n  text: string;\n\n  constructor(todoText: string) {\n    this.text = todoText;\n    this.id = new Date().toISOString();\n  }\n}\n\nexport default Todo;\n","import React, { useState } from 'react';\n\nimport Todo from '../models/todo';\n\ntype TodosContextObj = {\n  items: Todo[];\n  addTodo: (text: string) => void;\n  removeTodo: (id: string) => void;\n};\n\nexport const TodosContext = React.createContext<TodosContextObj>({\n  items: [],\n  addTodo: () => {},\n  removeTodo: (id: string) => {},\n});\n\nconst TodosContextProvider: React.FC = (props) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const addTodoHandler = (todoText: string) => {\n    const newTodo = new Todo(todoText);\n\n    setTodos((prevTodos) => {\n      return prevTodos.concat(newTodo);\n    });\n  };\n\n  const removeTodoHandler = (todoId: string) => {\n    setTodos((prevTodos) => {\n      return prevTodos.filter((todo) => todo.id !== todoId);\n    });\n  };\n\n  const contextValue: TodosContextObj = {\n    items: todos,\n    addTodo: addTodoHandler,\n    removeTodo: removeTodoHandler,\n  };\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {props.children}\n    </TodosContext.Provider>\n  );\n};\n\nexport default TodosContextProvider;\n","import React, { useContext } from 'react';\n\nimport { TodosContext } from '../context/todo-context';\n\nimport { Badge, StackDivider, Text, VStack } from '@chakra-ui/react';\n\nconst TodoList: React.FC = () => {\n  const todoCtx = useContext(TodosContext);\n\n  const removeHandler = (id: string) => {\n    todoCtx.removeTodo(id);\n  };\n\n  if (todoCtx.items.length === 0) {\n    return (\n      <Badge colorScheme='green' px='4' py='2' borderRadius='4'>\n        Yippe!!! Nothing to do &nbsp; &#128512;\n      </Badge>\n    );\n  }\n\n  return (\n    <VStack\n      margin='10px'\n      divider={<StackDivider borderColor='gray.200' />}\n      borderWidth='2px'\n      borderColor='gray.200'\n      borderRadius='lg'\n      p='4'\n      width='100%'\n      maxW={{ base: '90vw', sm: '80vw', lg: '60vw' }}\n    >\n      {todoCtx.items.map((todo) => (\n        <Text\n          key={todo.id}\n          onClick={removeHandler.bind(null, todo.id)}\n          cursor='pointer'\n        >\n          {todo.text}\n        </Text>\n      ))}\n    </VStack>\n  );\n};\n\nexport default TodoList;\n","import React, { useContext, useRef } from 'react';\n\nimport { TodosContext } from '../context/todo-context';\n\nimport { Button, HStack, Input, useToast } from '@chakra-ui/react';\n\nconst AddTodo: React.FC = (props) => {\n  const todoCtx = useContext(TodosContext);\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\n  const toast = useToast();\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const enteredText = todoTextInputRef.current!.value;\n\n    if (enteredText.trim().length === 0) {\n      toast({\n        title: 'Add text to your TODO',\n        status: 'error',\n        duration: 2000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    todoCtx.addTodo(enteredText);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <HStack mt='4'>\n        <Input variant='filled' placeholder='Add todo' ref={todoTextInputRef} />\n        <Button px='8' backgroundColor='red.500' color='white' type='submit'>\n          Add\n        </Button>\n      </HStack>\n    </form>\n  );\n};\n\nexport default AddTodo;\n","import React from 'react';\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\nfunction AreaChartComponent() {\n  const data = [\n    {\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      amt: 2400,\n    },\n    {\n      name: 'Page B',\n      uv: 3000,\n      pv: 1398,\n      amt: 2210,\n    },\n    {\n      name: 'Page C',\n      uv: 2000,\n      pv: 9800,\n      amt: 2290,\n    },\n    {\n      name: 'Page D',\n      uv: 2780,\n      pv: 3908,\n      amt: 2000,\n    },\n    {\n      name: 'Page E',\n      uv: 1890,\n      pv: 4800,\n      amt: 2181,\n    },\n    {\n      name: 'Page F',\n      uv: 2390,\n      pv: 3800,\n      amt: 2500,\n    },\n    {\n      name: 'Page G',\n      uv: 3490,\n      pv: 4300,\n      amt: 2100,\n    },\n  ];\n\n  return (\n    <ResponsiveContainer width='100%' aspect={3}>\n      <AreaChart\n        width={500}\n        height={400}\n        data={data}\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0,\n        }}\n      >\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis />\n        <Tooltip />\n        <Area type='monotone' dataKey='uv' stroke='#8884d8' fill='#8884d8' />\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default AreaChartComponent;\n","import React from 'react';\nimport {\n  Radar,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  ResponsiveContainer,\n} from 'recharts';\n\nfunction RadalChartComponent() {\n  const data = [\n    {\n      subject: 'Math',\n      A: 120,\n      B: 110,\n      fullMark: 150,\n    },\n    {\n      subject: 'Hindi',\n      A: 98,\n      B: 130,\n      fullMark: 150,\n    },\n    {\n      subject: 'English',\n      A: 86,\n      B: 130,\n      fullMark: 150,\n    },\n    {\n      subject: 'Geography',\n      A: 99,\n      B: 100,\n      fullMark: 150,\n    },\n    {\n      subject: 'Physics',\n      A: 85,\n      B: 90,\n      fullMark: 150,\n    },\n    {\n      subject: 'History',\n      A: 65,\n      B: 85,\n      fullMark: 150,\n    },\n  ];\n\n  return (\n    <ResponsiveContainer width='100%' aspect={3}>\n      <RadarChart cx='50%' cy='50%' outerRadius='80%' data={data}>\n        <PolarGrid />\n        <PolarAngleAxis dataKey='subject' />\n        <Radar\n          name='Zia'\n          dataKey='A'\n          stroke='#8884d8'\n          fill='#8884d8'\n          fillOpacity={0.6}\n        />\n      </RadarChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default RadalChartComponent;\n","import React from 'react';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nfunction BarChartComponent() {\n  const data = [\n    {\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      amt: 2400,\n    },\n    {\n      name: 'Page B',\n      uv: 3000,\n      pv: 1398,\n      amt: 2210,\n    },\n    {\n      name: 'Page C',\n      uv: 2000,\n      pv: 9800,\n      amt: 2290,\n    },\n    {\n      name: 'Page D',\n      uv: 2780,\n      pv: 3908,\n      amt: 2000,\n    },\n    {\n      name: 'Page E',\n      uv: 1890,\n      pv: 4800,\n      amt: 2181,\n    },\n    {\n      name: 'Page F',\n      uv: 2390,\n      pv: 3800,\n      amt: 2500,\n    },\n    {\n      name: 'Page G',\n      uv: 3490,\n      pv: 4300,\n      amt: 2100,\n    },\n  ];\n\n  return (\n    <ResponsiveContainer width='100%' aspect={3}>\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey='pv' stackId='a' fill='#8884d8' />\n        <Bar dataKey='uv' stackId='a' fill='#82ca9d' />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default BarChartComponent;\n","import React from 'react';\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nfunction LineChartComponent() {\n  const data = [\n    {\n      name: 'Page A',\n      uv: 4000,\n      pv: 2400,\n      amt: 2400,\n    },\n    {\n      name: 'Page B',\n      uv: 3000,\n      pv: 1398,\n      amt: 2210,\n    },\n    {\n      name: 'Page C',\n      uv: 2000,\n      pv: 9800,\n      amt: 2290,\n    },\n    {\n      name: 'Page D',\n      uv: 2780,\n      pv: 3908,\n      amt: 2000,\n    },\n    {\n      name: 'Page E',\n      uv: 1890,\n      pv: 4800,\n      amt: 2181,\n    },\n    {\n      name: 'Page F',\n      uv: 2390,\n      pv: 3800,\n      amt: 2500,\n    },\n    {\n      name: 'Page G',\n      uv: 3490,\n      pv: 4300,\n      amt: 2100,\n    },\n  ];\n  return (\n    <ResponsiveContainer width='100%' aspect={2.8}>\n      <LineChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          type='monotone'\n          dataKey='pv'\n          stroke='#8884d8'\n          activeDot={{ r: 8 }}\n        />\n        <Line type='monotone' dataKey='uv' stroke='#82ca9d' />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default LineChartComponent;\n","import { Container, HStack, Text } from '@chakra-ui/react';\nimport AreaChartComponent from './AreaChartComponent';\nimport RadalChartComponent from './RadalChartComponent';\nimport BarChartComponent from './BarChartComponent';\nimport LineChartComponent from './LineChartComponent';\n\nconst Charts = () => {\n  return (\n    <>\n      <Container m='50px 0 !important'>\n        <Text\n          textAlign='center'\n          size='lg'\n          fontSize='32'\n          bgGradient='Linear(to-r, green.300, green.400, green.500)'\n          bgClip='text'\n        >\n          Recharts\n        </Text>\n      </Container>\n      <HStack width='100%'>\n        <AreaChartComponent />\n        <RadalChartComponent />\n      </HStack>\n      <br />\n      <br />\n      <HStack width='100%'>\n        <BarChartComponent />\n        <LineChartComponent />\n      </HStack>\n    </>\n  );\n};\n\nexport default Charts;\n","import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport G6 from '@antv/g6';\nimport { Text } from '@chakra-ui/react';\n\nfunction GraphComponent() {\n  const ref = React.useRef(null);\n  let graph = null;\n\n  useEffect(() => {\n    const graph = new G6.Graph({\n      container: ReactDOM.findDOMNode(ref.current),\n      width: 500,\n      height: 500,\n      layout: {\n        type: 'force',\n      },\n      defaultNode: {\n        size: 15,\n      },\n    });\n\n    console.log('Graph');\n\n    fetch('https://gw.alipayobjects.com/os/antvdemo/assets/data/relations.json')\n      .then((res) => res.json())\n      .then((data) => {\n        graph.data({\n          nodes: data.nodes,\n          edges: data.edges.map(function (edge, i) {\n            edge.id = 'edge' + i;\n            return Object.assign({}, edge);\n          }),\n        });\n        graph.render();\n\n        graph.on('node:dragstart', function (e) {\n          graph.layout();\n          refreshDragedNodePosition(e);\n        });\n        graph.on('node:drag', function (e) {\n          const forceLayout = graph.get('layoutController').layoutMethods[0];\n          forceLayout.execute();\n          refreshDragedNodePosition(e);\n        });\n        graph.on('node:dragend', function (e) {\n          e.item.get('model').fx = null;\n          e.item.get('model').fy = null;\n        });\n\n        // if (typeof window !== 'undefined')\n        //   window.onresize = () => {\n        //     if (!graph || graph.get('destroyed')) return;\n        //     if (!container || !container.scrollWidth || !container.scrollHeight)\n        //       return;\n        //     graph.changeSize(container.scrollWidth, container.scrollHeight);\n        //   };\n      });\n\n    function refreshDragedNodePosition(e) {\n      const model = e.item.get('model');\n      model.fx = e.x;\n      model.fy = e.y;\n    }\n  }, [graph]);\n\n  return (\n    <>\n      <Text\n        size='lg'\n        fontSize='32'\n        bgGradient='Linear(to-r, green.300, green.400, green.500)'\n        bgClip='text'\n        m='50px 0 !important'\n      >\n        G6 Data Visualisation\n      </Text>\n      <div ref={ref}></div>\n    </>\n  );\n}\n\nexport default GraphComponent;\n","import React from 'react';\n\nimport { VStack } from '@chakra-ui/react';\n\nimport Navbar from './components/Navbar';\nimport TodoList from './components/TodoList';\nimport AddTodo from './components/AddTodo';\nimport Charts from './components/charts/Charts';\nimport GraphComponent from './components/graph/GraphComponent';\n\nfunction App() {\n  return (\n    <VStack>\n      <Navbar />\n      <TodoList />\n      <AddTodo />\n      <Charts />\n      <GraphComponent />\n    </VStack>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  ChakraProvider,\n  ColorModeScript,\n  extendTheme,\n  ThemeConfig,\n} from '@chakra-ui/react';\n\nimport TodosContextProvider from './context/todo-context';\n\nconst config: ThemeConfig = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme({ config });\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodosContextProvider>\n      <ChakraProvider theme={theme}>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <App />\n      </ChakraProvider>\n    </TodosContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}